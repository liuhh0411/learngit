# Python接口测试第一天-上课笔记

## 什么是接口

1. 接口是功能的底层实现
2. 接口是一个函数,拥有接口地址,可以公开访问

## 接口流程

请求(Request)  ->  处理 -> 响应 (Response)

### 请求
1. 接口地址-Request Url:  协议://服务器地址:端口号/接口地址?参数1=参数值&参数2=参数值
2. 请求方法-Request Method: GET/POST...
3. 请求头-Request Headers: 请求数据的一些辅助说明
4. 请求体-Request Body: 请求数据
### 请求地址
- 协议: http://   https://  
- 服务器地址:  ip或域名
- 端口号: http默认80端口, https默认443端口
- 接口地址: 接口在服务器上的地址,一般由路由表确定具体指向那个文件
- 请求参数: ?k1=v1&k2=v2  如果有特殊字符或非ascii码要进行url编码
** HTTP与HTTPS的区别
- HTTP无状态不安全, HTTPS=HTTP+SSL传输时数据会在会话层进行SSL加密
- HTTP默认80端口, HTTPS默认443端口
- HTTPS服务端需要申请证书才能使用,收费
- HTTPS较HTTP慢

### 请求方法
**GET和POST请求的区别**
- GET一般用来获取数据, POST用来修改或创建数据
- GET请求没有请求体, POST有
- GET请求参数只能从url中携带, 直接暴露再请求地址中,安全性不好并且有长度限制, POST请求参数从请求体中后台传输, 无长度限制, 安全性更好
- GET请求可以被浏览器记录历史或者保存成标签, POST一般浏览器不保存
- GET请求可以被缓存, POST无
- GET请求是幂等操作,不会影响下次访问, POST请求是非幂等操作, 有可能会破坏原有数据影响下次访问

**其他请求方法**
- HEAD: 类似GET请求,不返回响应体
- PUT: 常用来修改数据, 幂等请求(不同于POST)
- DELETE: 常用来删除数据, 幂等请求

### 请求头 
- Content-Type: 请求内容类型 
- Cookie: 服务器存在客户端来识别客户身份的  保存在客户端
- Connection: 是否长连(下次不用再重新建立连接)
- Cache-Control: 是否开启缓存

### 请求体
常见的4种请求类型
1. 纯文本表单: application/x-www-form-urlencode
2. 混合表单: multipart/form-data
3. json格式: application/json
3. xml格式: application/xml或text/xml

## 处理
1. 身份验证
2. 参数验证
3. 业务处理
4. 返回数据
**接口常见的安全策略**
1. cookie和session

    1. 登录淘宝 ->  从数据库验证用户名密码 | 为该用户 新建并保持一个session(会话) 唯一的sessionid
    2. -> set-cookie: sessionid=******* 
    3. 之后的访问:  cookie: sessionid  -> 

    1. 关闭网页或浏览器不会关闭session
    2. session有一定的有效期

对内

开放平台

2. appid 注册成为开发者后 为你生成一个唯一的appid
3. token: 身份令牌
4. 开放协议协议 接口的授权  Basic Oath  Oauth2.0 
5. 数字签名 对所有参数 和数据 进行排列组合 然后加密 
cookie和session的区别:



## 响应
1. 状态码
1** 继续
2** 成功
3** 重定向
4** 客户端请求问题
400 请求不能正常解析
401 未授权
404 资源找不到 一般是接口地址不正确 或者服务没启动
405 请求方法不对

5** 服务器错误
500 服务器内部错误
502 网关五响应
504 网关超时
2. 响应头
content-type:
set-cookie:
3. 响应体

